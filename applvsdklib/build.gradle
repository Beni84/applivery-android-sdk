/*
 * Copyright (c) 2016 Applivery
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'jacoco-android'
apply from: rootProject.file('gradle/checkstyle.gradle')

group = rootProject.ext.group
version = rootProject.ext.version

ext {
  bintrayRepo = 'maven'
  bintrayName = 'applivery-android-sdk'

  publishedGroupId = rootProject.ext.group
  libraryName = 'applivery-android-sdk'
  artifact = 'applvsdklib'

  libraryDescription = 'Applivery android sdk'

  siteUrl = 'https://github.com/applivery/applivery-android-sdk'
  gitUrl = 'https://github.com/applivery/applivery-android-sdk.git'

  libraryVersion = rootProject.ext.version

  developerId = 'applivery'
  developerName = 'Applivery'
  developerEmail = 'info@applivery.com'

  licenseName = 'The Apache Software License, Version 2.0'
  licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
  allLicenses = ["Apache-2.0"]
}

def STRING = "String"
def LONG = "long"

android {
  compileSdkVersion parent.ext.androidCompileSdkVersion
  buildToolsVersion parent.ext.androidBuildToolsVersion

  defaultConfig {
    minSdkVersion parent.ext.androidMinSdkVersion
    targetSdkVersion parent.ext.androidTargetSdkVersion
    versionCode computeVersionCode()
    versionName rootProject.ext.version

    buildConfigField STRING, "API_URL", '"https://dashboard.applivery.com"'
    buildConfigField LONG, "UPDATE_CHECKING_TIME", '86400000l'
  }

  buildTypes {
    debug {
      //      buildConfigField STRING, "API_URL", '"http://dashboard.sandbox.applivery.com"'
      buildConfigField STRING, "API_URL", '"https://dashboard.applivery.com"'
      testCoverageEnabled true
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      buildConfigField STRING, "API_URL", '"https://dashboard.applivery.com"'
    }
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }

  sourceSets {
    test {
      resources {
        srcDir "test"
      }
    }
  }

  lintOptions {
    abortOnError false
  }
}

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.dicedmelon.gradle:jacoco-android:0.1.2'
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation 'com.android.support:appcompat-v7:28.0.0'
  implementation 'com.android.support:design:28.0.0'

  implementation 'com.squareup.retrofit2:retrofit:2.4.0'
  implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
  implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
  implementation 'com.google.code.gson:gson:2.8.2'

  implementation('com.karumi:dexter:2.2.2') {
    exclude group: 'com.android.support', module: 'recyclerview-v7'
  }

  testImplementation 'junit:junit:4.12'
  testImplementation 'org.mockito:mockito-all:2.0.2-beta'
  testImplementation 'com.squareup.okhttp:mockwebserver:2.6.0'
}

apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
apply from: '../bintrayv1.gradle'
repositories {
  mavenCentral()
}

/**
 * Gets the commit number from the current Git commit. E.g. 538*/
def computeVersionCode() {
  def stdout = new ByteArrayOutputStream()
  exec {
    commandLine 'git', 'rev-list', '--count', 'HEAD'
    standardOutput = stdout
  }
  return stdout.toString().trim().toInteger()
}